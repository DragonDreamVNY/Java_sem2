/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package src;

import java.sql.*;
import com.sun.rowset.JdbcRowSetImpl;
import java.text.DecimalFormat;
import javax.swing.JOptionPane;
import javax.swing.JFrame;
import static javax.swing.JOptionPane.QUESTION_MESSAGE;
import javax.swing.JTextArea;
import javax.swing.JComboBox;

/**
 *
 * @author k00223361 Vincent Lee
 * based on skeleton from alan 
 */
public class MainFrame extends javax.swing.JFrame {

    //ResultSet resultSet;
    JdbcRowSetImpl rowSet = new JdbcRowSetImpl();
    Connection connection; 
    String EURO = "\u20ac"; //http://www.rgagnon.com/javadetails/java-0136.html
                             //http://w.planetnetbeans.org/topic48319.html

    /**
     * Creates new form InsertFrame
     */
    public MainFrame() {
        initComponents();
        
        try {
            rowSet.setUrl("jdbc:mysql://localhost:3306/litrealty"); // 3306 on LIT localost
            rowSet.setUsername("root");
            rowSet.setPassword("root");
       
            String initQuery = "SELECT * FROM agents";
            rowSet.setCommand(initQuery);
            rowSet.execute(); 
            System.out.println("connection established at " + connection);
            System.out.println("displaying from \'AGENTS\' Table\n");     
            
            //load Agents
            while(rowSet.next()) {
                String agentID = rowSet.getString(1); 
                System.out.print("Agent added - ID : " + agentID + "\t");
                String comboAgents = rowSet.getString(2); 
                System.out.print("Name : " + comboAgents + "\n");
                
                agentsComboBox.addItem(comboAgents);
            }//end while
            
        }//end try
        catch(SQLException sqlex) {
            JOptionPane.showMessageDialog(null, sqlex.toString(), "Connection Error", JOptionPane.ERROR_MESSAGE);
            System.err.println("SQLException: "+ sqlex.getMessage());
            //sqlex.printStackTrace();
            System.exit(0);
        }

    }//end MainFrame()

    private void loadData(){
        try{
            String agentID = rowSet.getString(1); 
            //authorIDTextField.setText(authorID);

        } catch (SQLException sqlex) {
            System.err.println("Input to String is wrong \nCouldn't set textfields");
        } //end try catch
    }// end input
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        agentsComboBox = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        listPrices_Btn = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        listProperty_Btn = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        ins_Btn = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridLayout(4, 1, 10, 10));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Agents"));
        jPanel1.setLayout(new java.awt.BorderLayout());

        agentsComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agentsComboBoxActionPerformed(evt);
            }
        });
        jPanel1.add(agentsComboBox, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Total House Price"));
        jPanel2.setLayout(new java.awt.BorderLayout());

        listPrices_Btn.setText("Display Total Price Of All Houses");
        listPrices_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listPrices_BtnActionPerformed(evt);
            }
        });
        jPanel2.add(listPrices_Btn, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel2);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Print Details"));
        jPanel4.setLayout(new java.awt.BorderLayout());

        listProperty_Btn.setText("Print Property Details");
        listProperty_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listProperty_BtnActionPerformed(evt);
            }
        });
        jPanel4.add(listProperty_Btn, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel4);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Do Insert"));
        jPanel5.setLayout(new java.awt.BorderLayout());

        ins_Btn.setText("Do Insert");
        ins_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ins_BtnActionPerformed(evt);
            }
        });
        jPanel5.add(ins_Btn, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel5);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void listProperty_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listProperty_BtnActionPerformed
        //PRINT PROPERT and AGENTS DETAILS in Formatted List
        
         try { 
            JTextArea jta = new JTextArea(5,5);
   
            
            
            String results ="";
            String printQuery = "SELECT properties.id as PropertyID,\n" +
                                "properties.street as Street,\n" +
                                "properties.city as City,\n" +
                                "properties.description as Description,\n" +
                                "properties.price as Price,\n" +
                                "agents.name as Agent_Name,\n" +
                                "agents.phone as Agent_Phone \n" +
                                "FROM properties\n" +
                                "INNER JOIN\n" +
                                "agents\n" +
                                "WHERE properties.agentid = agents.agentId\n" +
                                "ORDER BY agents.agentId;";
            rowSet.setCommand(printQuery);
            rowSet.execute(); 
            System.out.println("displaying from \'AGENTS\' & \'PROPERTIES\' Tables\n");     
            
            //load Agents and Properties
            while(rowSet.next()) {
                results += rowSet.getString(1) + "\t" + //output PropertyID
                rowSet.getString(2) + "\t" +    //output  Street
                rowSet.getString(3) + "\t" +    //output  City
                rowSet.getString(4)  + "\t\t" +    //output  Description        
                "â‚¬" + rowSet.getString(5) + "\t" +    //output  Price
                rowSet.getString(6) + "\t" +    //output  Agent_Name
                rowSet.getString(7)  + "\n";    //output  Agent_Phone         
                        
                String agentID = rowSet.getString(1); 
                System.out.print("Agent added - ID : " + agentID + "\t");
                String comboAgents = rowSet.getString(2); 
                System.out.print("Name : " + comboAgents + "\n");
                
                agentsComboBox.addItem(comboAgents);
            }//end while
            jta.setText(results);
            JOptionPane.showMessageDialog(null, jta);
            //rowSet.close();
        }//end try
        catch(SQLException sqlex) {
            JOptionPane.showMessageDialog(null, sqlex.toString(), "Error Listing Properties", JOptionPane.ERROR_MESSAGE);
            System.err.println("SQLException: "+ sqlex.getMessage());
            //sqlex.printStackTrace();
            System.exit(0);
        }//end catch
        
        
       
    }//GEN-LAST:event_listProperty_BtnActionPerformed

    private void agentsComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agentsComboBoxActionPerformed
        // International Secret Agents COMBO BOX
        // ref: http://www.codejava.net/java-se/swing/jcombobox-basic-tutorial-and-examples
        // http://stackoverflow.com/questions/9331899/java-retrieving-data-from-database-and-display-using-jcombobox
        // http://www.roseindia.net/tutorial/java/swing/comboboxwithdatabaseValues.html 
        try{
            //fetch the agents records from the 'litrealty.agents' table
            //String agentQuery = "SELECT name FROM litrealty.agents ORDER BY agentId;";
            //String[] agentList = new String[] {"populate this with Agent Array"};
            //JComboBox<String> addAgents = new JComboBox<>(agentList);
            
            //add(addAgents); // add to the parent container (e.g. a JFrame):

            //String selectedAgent = (String) agentList.getSelectedItem(); // get the selected item
            
            //PreparedStatement stmt = connection.prepareStatement(agentQuery); 
            //ResultSet agentset = stmt.executeQuery(agentQuery);
            
            
/*    
            while(rowSet.next()) {    
                /*
                if (comboAgents.equals("")) {
                    agentsComboBox.addItem("");
                    agentsComboBox.setVisible(false);
                } 
                else {        
                // add agent names to combo box
                    agentsComboBox.addItem(comboAgents);
                    System.out.println("Agent named added : " + comboAgents);
                    agentsComboBox.setVisible(true);
                }
                
 
            }//end while
*/
 
        }//end try
        catch(Exception sqlex){
            System.err.println("Error in performing 10Hit COMBO");
            System.exit(0);
        }//end catch
            
    }//GEN-LAST:event_agentsComboBoxActionPerformed

    private void listPrices_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listPrices_BtnActionPerformed
        // List HOUSE PRICES in a Formatted List (
        try{ 
            
            String pricesQuery = "SELECT SUM(price) as TotalPrice FROM properties;";
            rowSet.setCommand(pricesQuery);
            rowSet.execute(); 
            System.out.println("displaying from \'PROPERTIES\' Table\n");
            
            
            while(rowSet.next()) {
                String propertiesTotal = rowSet.getString(1); 
                
                double amount = Double.parseDouble(propertiesTotal);
                DecimalFormat formatter = new DecimalFormat("#,###.00");

                System.out.println("Total Price : â‚¬" + formatter.format(amount));
                JOptionPane.showMessageDialog(null, "â‚¬"+ formatter.format(amount), "Total Price of ALL Properties", JOptionPane.INFORMATION_MESSAGE);
            }//end while
            //rowSet.close();
        }//end try
         catch(Exception sqlex){
            System.err.println("Error in listing price");
            System.exit(0);
        }//end catch
    }//GEN-LAST:event_listPrices_BtnActionPerformed

    private void ins_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ins_BtnActionPerformed
        // INSERT BUTTON:
    }//GEN-LAST:event_ins_BtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox agentsComboBox;
    private javax.swing.JButton ins_Btn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JButton listPrices_Btn;
    private javax.swing.JButton listProperty_Btn;
    // End of variables declaration//GEN-END:variables
}
