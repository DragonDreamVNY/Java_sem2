/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package src;

import com.sun.rowset.JdbcRowSetImpl;
import java.sql.Connection;
import java.sql.SQLException;
import java.text.DecimalFormat;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.ImageIcon;

/**
 *k00223361 Vincent Lee
 */
public class MainFrame extends javax.swing.JFrame {
    
    JdbcRowSetImpl rowSet = new JdbcRowSetImpl();
    Connection connection; 
    
    /**
     * Creates new form InsertFrame
     */
    public MainFrame() {
        initComponents();
        
        try {
            rowSet.setUrl("jdbc:mysql://localhost:3306/litrealty"); // 3306 on LIT localost
            rowSet.setUsername("root");
            rowSet.setPassword("root");
       
            String initQuery = "SELECT * FROM agents";
            rowSet.setCommand(initQuery);
            rowSet.execute(); 
            System.out.println("connection established at " + connection);
            System.out.println("displaying from \'AGENTS\' Table\n");     
            
            //load Agents
            while(rowSet.next()) {
                String agentID = rowSet.getString(1);  //gets the value from agentID column 
                System.out.print("Agent added - ID : " + agentID + "\t");
                String comboAgents = rowSet.getString(2); //gets the value or name from agent's name column
                System.out.print("Name : " + comboAgents + "\n");
                
                agentsComboBox.addItem(comboAgents);
                
            }//end while
            
        }//end try
        catch(SQLException sqlex) {
            JOptionPane.showMessageDialog(null, sqlex.toString(), "Connection Error", JOptionPane.ERROR_MESSAGE);
            System.err.println("SQLException: "+ sqlex.getMessage());
            //sqlex.printStackTrace();
            System.exit(0);
        }
        
    }// end mainFrame

    private void loadData(){
        try{
            String agentID = rowSet.getString(1);
            
            /*
            String agentName = rowSet.getString(2); //name
            String agentPhone = rowSet.getString(3); //phone
            String agentFax = rowSet.getString(4);
            */
        } catch (SQLException sqlex) {
            System.err.println("Input to String is wrong \nCouldn't set textfields");
        } //end try catch
    }// end input
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        agentPanel = new javax.swing.JPanel();
        agentsComboBox = new javax.swing.JComboBox();
        totPricePanel = new javax.swing.JPanel();
        totalHousePriceButton = new javax.swing.JButton();
        printDetailsPanel = new javax.swing.JPanel();
        printDetailsButton = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Main Frame");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridLayout(3, 1, 10, 10));

        agentPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Agents"));
        agentPanel.setLayout(new java.awt.BorderLayout());

        agentsComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agentsComboBoxActionPerformed(evt);
            }
        });
        agentPanel.add(agentsComboBox, java.awt.BorderLayout.CENTER);

        getContentPane().add(agentPanel);

        totPricePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Total House Price"));
        totPricePanel.setLayout(new java.awt.BorderLayout());

        totalHousePriceButton.setText("Display Total Price Of All Houses");
        totalHousePriceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalHousePriceButtonActionPerformed(evt);
            }
        });
        totPricePanel.add(totalHousePriceButton, java.awt.BorderLayout.CENTER);

        getContentPane().add(totPricePanel);

        printDetailsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Print Details"));
        printDetailsPanel.setLayout(new java.awt.BorderLayout());

        printDetailsButton.setText("Print Property Details");
        printDetailsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printDetailsButtonActionPerformed(evt);
            }
        });
        printDetailsPanel.add(printDetailsButton, java.awt.BorderLayout.CENTER);

        getContentPane().add(printDetailsPanel);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void printDetailsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printDetailsButtonActionPerformed
     //PRINT PROPERT and AGENTS DETAILS in Formatted List
        try { 
            JTextArea jta = new JTextArea(10,50);
             jta.setEditable(false);
            
            
            String results ="";
            String printQuery = "SELECT properties.id as PropertyID,\n" +
                                "properties.street as Street,\n" +
                                "properties.city as City,\n" +
                                "properties.bathrooms as Bathrooms,\n" +
                                "properties.bedrooms as Bedrooms,\n" +
                                "properties.price as Price,\n" +
                                "properties.price as Style\n" +
                                "FROM properties\n" +
                                "INNER JOIN\n" +
                                "styles\n" +
                                "WHERE properties.styleId = styles.styleId\n" +
                                "ORDER BY properties.id;";
            rowSet.setCommand(printQuery);
            rowSet.execute(); 
            System.out.println("displaying from \'PROPERTIES\' & \'STYLES\' Tables\n");     
            
            //load Agents and Properties
            while(rowSet.next()) {
                results += rowSet.getString(1) + "\t" + //output PropertyID
                rowSet.getString(2) + "\t" +    //output  Street
                rowSet.getString(3) + "\t" +    //output  City
                rowSet.getString(4)  + "\t\t" +    //output  V  Bathrooms     
                "€" + rowSet.getInt(5) + "\t" +    //output  Bedrooms
                rowSet.getString(6) + "\t" +    //output  Price
                rowSet.getInt(7)  + "\n";    //output  Style         

            }//end while
            
            jta.setText(results);
            JOptionPane.showMessageDialog(null, jta);
            //rowSet.close();
        }//end try
        catch(SQLException sqlex) {
            JOptionPane.showMessageDialog(null, sqlex.toString(), "Error Listing Properties", JOptionPane.ERROR_MESSAGE);
            System.err.println("SQLException: "+ sqlex.getMessage());
            //sqlex.printStackTrace();
            System.exit(0);
        }//end catch

       
    }//GEN-LAST:event_printDetailsButtonActionPerformed

    private void agentsComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agentsComboBoxActionPerformed

        //rowSet.setCommand("SELECT * FROM agents WHERE name =" + id;);     //use this if passing id as parameter
        //AgentDetailsFrame agentDisplay = new AgentDetailsFrame(this, rowSet);
        
        
        //get the selected id from the combobox
        String id = agentsComboBox.getSelectedItem().toString();
        
        AgentDetailsFrame agentDisplay = new AgentDetailsFrame(id);
        agentDisplay.setVisible(true);
       
    }//GEN-LAST:event_agentsComboBoxActionPerformed

    private void totalHousePriceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalHousePriceButtonActionPerformed
        // (2) List HOUSE PRICES in a Formatted List 
        try{ 
            
            String pricesQuery = "SELECT SUM(price) as TotalPrice FROM properties;";
            rowSet.setCommand(pricesQuery);
            rowSet.execute(); 
            System.out.println("displaying from \'PROPERTIES\' Table\n");
            
            
            while(rowSet.next()) {
                String propertiesTotal = rowSet.getString(1); 
                
                double amount = Double.parseDouble(propertiesTotal);
                DecimalFormat formatter = new DecimalFormat("#,###.00");

                System.out.println("Total Price : €" + formatter.format(amount));
                JOptionPane.showMessageDialog(null, "€"+ formatter.format(amount), "Total prices of ALL Properties", JOptionPane.INFORMATION_MESSAGE);
            }//end while
            //rowSet.close();
        }//end try
         catch(Exception sqlex){
            System.err.println("Error in listing price");
            System.exit(0);
        }//end catch
        
    }//GEN-LAST:event_totalHousePriceButtonActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        
        System.exit(0);
    }//GEN-LAST:event_formWindowClosed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel agentPanel;
    private javax.swing.JComboBox agentsComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton printDetailsButton;
    private javax.swing.JPanel printDetailsPanel;
    private javax.swing.JPanel totPricePanel;
    private javax.swing.JButton totalHousePriceButton;
    // End of variables declaration//GEN-END:variables
}
