
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author DragonDream
 */
public class CountGUI extends javax.swing.JFrame {
    boolean pausedUp = false;
    boolean pausedDown = false;
    
    CountUpThread cUpThread = new CountUpThread();
    CountDownThread cDownThread = new CountDownThread();
    /**
     * Creates new form CountGUI
     */
    public CountGUI() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        startCountUp_btn = new javax.swing.JButton();
        startCountDown_btn = new javax.swing.JButton();
        startCountBoth_btn = new javax.swing.JButton();
        pauseCountUp_btn = new javax.swing.JButton();
        pauseCountDown_btn = new javax.swing.JButton();
        pauseBoth_btn = new javax.swing.JButton();
        resumeCountDown_btn = new javax.swing.JButton();
        resumeCountUp_btn1 = new javax.swing.JButton();
        resumeBoth_btn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        countUp_Label = new javax.swing.JLabel();
        countDown_Label = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        startCountUp_btn.setText("Start Count Up");
        startCountUp_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startCountUp_btnActionPerformed(evt);
            }
        });

        startCountDown_btn.setText("Start Count Down");
        startCountDown_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startCountDown_btnActionPerformed(evt);
            }
        });

        startCountBoth_btn.setText("Start Both");
        startCountBoth_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startCountBoth_btnActionPerformed(evt);
            }
        });

        pauseCountUp_btn.setText("Pause Count Up");
        pauseCountUp_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pauseCountUp_btnActionPerformed(evt);
            }
        });

        pauseCountDown_btn.setText("Pause Count Down");
        pauseCountDown_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pauseCountDown_btnActionPerformed(evt);
            }
        });

        pauseBoth_btn.setText("Pause Both");
        pauseBoth_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pauseBoth_btnActionPerformed(evt);
            }
        });

        resumeCountDown_btn.setText("Resume Count Down");
        resumeCountDown_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resumeCountDown_btnActionPerformed(evt);
            }
        });

        resumeCountUp_btn1.setText("Resume Count Up");
        resumeCountUp_btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resumeCountUp_btn1ActionPerformed(evt);
            }
        });

        resumeBoth_btn.setText("Resume Both");
        resumeBoth_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resumeBoth_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(startCountDown_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(startCountUp_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(startCountBoth_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pauseCountDown_btn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                    .addComponent(pauseCountUp_btn, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(pauseBoth_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resumeBoth_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(resumeCountDown_btn, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                    .addComponent(resumeCountUp_btn1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startCountUp_btn)
                    .addComponent(pauseCountUp_btn)
                    .addComponent(resumeCountUp_btn1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startCountDown_btn)
                    .addComponent(pauseCountDown_btn)
                    .addComponent(resumeCountDown_btn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startCountBoth_btn)
                    .addComponent(pauseBoth_btn)
                    .addComponent(resumeBoth_btn))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        countUp_Label.setText("countingUp");

        countDown_Label.setText("countingDown");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(countUp_Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 184, Short.MAX_VALUE)
                .addComponent(countDown_Label)
                .addGap(24, 24, 24))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(countUp_Label)
                    .addComponent(countDown_Label))
                .addContainerGap(67, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startCountUp_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startCountUp_btnActionPerformed
        startCountUp_btn.setEnabled(false);
        // Count Up : create thread and start it
        cUpThread.start();
    }//GEN-LAST:event_startCountUp_btnActionPerformed

    private void startCountDown_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startCountDown_btnActionPerformed
        startCountDown_btn.setEnabled(false);

        cDownThread.start();
    }//GEN-LAST:event_startCountDown_btnActionPerformed

    private void pauseCountUp_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pauseCountUp_btnActionPerformed
        // Pause Count Up
        //CountUpThread cUpThread = new CountUpThread();
        pausedUp = true;
        cUpThread.suspend();
//        try { 
//            while(pausedUp){
//                cUpThread.wait();
//            }
//        } catch (InterruptedException ex) {
//            Logger.getLogger(CountGUI.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_pauseCountUp_btnActionPerformed

    private void pauseCountDown_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pauseCountDown_btnActionPerformed
        // Pause CountDown
        cDownThread.suspend();
    }//GEN-LAST:event_pauseCountDown_btnActionPerformed

    private void pauseBoth_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pauseBoth_btnActionPerformed
        // Pause Both
        cUpThread.suspend();
        cDownThread.suspend();
    }//GEN-LAST:event_pauseBoth_btnActionPerformed

    private void resumeCountDown_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resumeCountDown_btnActionPerformed
        // RESUME Count Down
        cDownThread.resume();
    }//GEN-LAST:event_resumeCountDown_btnActionPerformed

    private void resumeCountUp_btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resumeCountUp_btn1ActionPerformed
        // RESUME Count Up
        cUpThread.resume();
    }//GEN-LAST:event_resumeCountUp_btn1ActionPerformed

    private void resumeBoth_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resumeBoth_btnActionPerformed
        // RESUME Count Down
        boolean pausedUp = false;
        boolean pausedDown = false;
        
        cUpThread.resume();
        cDownThread.resume();
    }//GEN-LAST:event_resumeBoth_btnActionPerformed

    private void startCountBoth_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startCountBoth_btnActionPerformed
        startCountBoth_btn.setEnabled(false);
        startCountUp_btn.setEnabled(false);
        startCountDown_btn.setEnabled(false);
        
        // Count Down both: 
        cUpThread.start();
        cDownThread.start();
    }//GEN-LAST:event_startCountBoth_btnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CountGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CountGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CountGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CountGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CountGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel countDown_Label;
    private javax.swing.JLabel countUp_Label;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton pauseBoth_btn;
    private javax.swing.JButton pauseCountDown_btn;
    private javax.swing.JButton pauseCountUp_btn;
    private javax.swing.JButton resumeBoth_btn;
    private javax.swing.JButton resumeCountDown_btn;
    private javax.swing.JButton resumeCountUp_btn1;
    private javax.swing.JButton startCountBoth_btn;
    private javax.swing.JButton startCountDown_btn;
    private javax.swing.JButton startCountUp_btn;
    // End of variables declaration//GEN-END:variables
    
    /*-------------*/
    //inner classes
    //these threads access the labels
    /*-------------*/
    class CountUpThread extends Thread{
        @Override
        public void run(){
            try{
                for (int i = 1;  i <= 100; i++) {//loop 100 times, put value of i into the label
                    countUp_Label.setText(i + "");
                    Thread.sleep(1000);
                }
            
            } catch (InterruptedException ex) {
                Logger.getLogger(CountGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }//end Run
    }//end CountUpThread
    
    class CountDownThread extends Thread{
        @Override
        public void run(){
            try{
                for (int i = 100;  i > 0; i--) {//loop 100 times, put value of i into the label
                    countDown_Label.setText(i + "");
                    Thread.sleep(1000); //sleep for 1 Second then resumes itself
                }
            }catch (InterruptedException ex) {
                Logger.getLogger(CountGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }//end Run
    }//end CountDownThread
    
    


}
