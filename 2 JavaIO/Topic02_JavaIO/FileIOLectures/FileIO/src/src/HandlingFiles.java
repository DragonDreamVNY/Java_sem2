/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package src;

import java.io.IOException;
import java.nio.charset.Charset;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardOpenOption;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;

/**
 *
 * @author Alan
 */
public class HandlingFiles extends javax.swing.JFrame {

    /**
     * Creates new form HandlingFiles
     */
    public HandlingFiles() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        createPanel = new javax.swing.JPanel();
        fileJLabel = new javax.swing.JLabel();
        createFileJTextField = new javax.swing.JTextField();
        createJButton = new javax.swing.JButton();
        copyPanel = new javax.swing.JPanel();
        copyJButton = new javax.swing.JButton();
        copyPanelCenter = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        sourceFileJTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        targetFileJTextField = new javax.swing.JTextField();
        deletePanel = new javax.swing.JPanel();
        fileJLabel1 = new javax.swing.JLabel();
        deleteFileJTextField = new javax.swing.JTextField();
        deleteJButton = new javax.swing.JButton();
        displayPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        viewFileJTextField = new javax.swing.JTextField();
        viewJButton = new javax.swing.JButton();
        writePanel = new javax.swing.JPanel();
        writePanelCenter = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        appendFileJTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        contentJTextField = new javax.swing.JTextField();
        writeJButton = new javax.swing.JButton();
        feedbackPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        statusJTextArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("File Handling");

        mainPanel.setLayout(new java.awt.GridLayout(5, 1));

        createPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Create File"));
        createPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 10));

        fileJLabel.setText("Enter File Name");
        createPanel.add(fileJLabel);

        createFileJTextField.setColumns(15);
        createPanel.add(createFileJTextField);

        createJButton.setText("Create");
        createJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createJButtonActionPerformed(evt);
            }
        });
        createPanel.add(createJButton);

        mainPanel.add(createPanel);

        copyPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Copy File"));
        copyPanel.setLayout(new java.awt.BorderLayout(0, 10));

        copyJButton.setText("Copy");
        copyJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyJButtonActionPerformed(evt);
            }
        });
        copyPanel.add(copyJButton, java.awt.BorderLayout.SOUTH);

        copyPanelCenter.setLayout(new java.awt.GridLayout(2, 2, 8, 8));

        jLabel2.setText("Enter Source File");
        copyPanelCenter.add(jLabel2);

        sourceFileJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sourceFileJTextFieldActionPerformed(evt);
            }
        });
        copyPanelCenter.add(sourceFileJTextField);

        jLabel3.setText("Enter Target File");
        copyPanelCenter.add(jLabel3);
        copyPanelCenter.add(targetFileJTextField);

        copyPanel.add(copyPanelCenter, java.awt.BorderLayout.CENTER);

        mainPanel.add(copyPanel);

        deletePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Delete File"));
        deletePanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        fileJLabel1.setText("Enter File Name");
        deletePanel.add(fileJLabel1);

        deleteFileJTextField.setColumns(15);
        deleteFileJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteFileJTextFieldActionPerformed(evt);
            }
        });
        deletePanel.add(deleteFileJTextField);

        deleteJButton.setText("Delete");
        deleteJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteJButtonActionPerformed(evt);
            }
        });
        deletePanel.add(deleteJButton);

        mainPanel.add(deletePanel);

        displayPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Display File"));
        displayPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel4.setText("Enter File Name");
        displayPanel.add(jLabel4);

        viewFileJTextField.setColumns(15);
        displayPanel.add(viewFileJTextField);

        viewJButton.setText("View");
        viewJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewJButtonActionPerformed(evt);
            }
        });
        displayPanel.add(viewJButton);

        mainPanel.add(displayPanel);

        writePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Write To File"));
        writePanel.setLayout(new java.awt.BorderLayout(0, 10));

        writePanelCenter.setLayout(new java.awt.GridLayout(2, 2, 8, 8));

        jLabel5.setText("Enter File Name");
        writePanelCenter.add(jLabel5);
        writePanelCenter.add(appendFileJTextField);

        jLabel6.setText("Enter Content to Append");
        writePanelCenter.add(jLabel6);
        writePanelCenter.add(contentJTextField);

        writePanel.add(writePanelCenter, java.awt.BorderLayout.CENTER);

        writeJButton.setText("Write Content To File");
        writeJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                writeJButtonActionPerformed(evt);
            }
        });
        writePanel.add(writeJButton, java.awt.BorderLayout.SOUTH);

        mainPanel.add(writePanel);

        getContentPane().add(mainPanel, java.awt.BorderLayout.CENTER);

        feedbackPanel.setLayout(new java.awt.BorderLayout());

        statusJTextArea.setBackground(new java.awt.Color(240, 240, 240));
        statusJTextArea.setColumns(20);
        statusJTextArea.setEditable(false);
        statusJTextArea.setForeground(new java.awt.Color(255, 255, 255));
        statusJTextArea.setRows(3);
        statusJTextArea.setEnabled(false);
        jScrollPane1.setViewportView(statusJTextArea);

        feedbackPanel.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(feedbackPanel, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void createJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createJButtonActionPerformed
       String fileName = createFileJTextField.getText();
       Path pathToFile = Paths.get(fileName);
        try {
            Files.createFile(pathToFile);
            statusJTextArea.setText("File created: " + pathToFile.toAbsolutePath());
            createFileJTextField.setText("");
        } catch (IOException ex) {
            statusJTextArea.setText("Opps!! Something has gone wrong\nEnsure that the file does not already exist");        
        }
        
       
    }//GEN-LAST:event_createJButtonActionPerformed

    private void copyJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyJButtonActionPerformed
       String sourceFileName = sourceFileJTextField.getText();
       String targetFileName = targetFileJTextField.getText();
       
       Path pathToSourceFile = Paths.get(sourceFileName); 
       Path pathToTargetFile = Paths.get(targetFileName); 
       
       try {
            Files.copy(pathToSourceFile, pathToTargetFile);
            statusJTextArea.setText("File " + pathToSourceFile.getFileName() + " successfully copied to " + pathToTargetFile.getFileName()); 
            sourceFileJTextField.setText("");
            targetFileJTextField.setText("");
            
       }
       catch (IOException ex) {
            statusJTextArea.setText("Opps!! Something has gone wrong, \nRemember the first file MUST EXIST for the copy operation to be successful\nAnd the second file must NOT already exist");    
        }
        
        
    }//GEN-LAST:event_copyJButtonActionPerformed

    private void deleteJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteJButtonActionPerformed
        String fileToDelete = deleteFileJTextField.getText();
        Path pathToTargetFile = Paths.get(fileToDelete); 
        try {
            Files.delete(pathToTargetFile);
            statusJTextArea.setText("File " + pathToTargetFile.getFileName() + " has been successfully deleted");
            deleteFileJTextField.setText("");
        } catch (IOException ex) {
            statusJTextArea.setText("Opps!! Something has gone wrong, \nEnsure that the file you are trying to delete exists\nAnd that the path is correct");
        }
    }//GEN-LAST:event_deleteJButtonActionPerformed

    private void viewJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewJButtonActionPerformed
       String fileToView = viewFileJTextField.getText();
       Path pathToTargetFile = Paths.get(fileToView); 
        
        List<String> lines;
        try {
            lines = Files.readAllLines(pathToTargetFile,Charset.forName("UTF-8"));
            String output = "";
            
            output += "The file " + pathToTargetFile.getFileName() + " has " + lines.size() + " lines\n";
            
            for(String item : lines ){
                 output += item + "\n";
            }
            
            statusJTextArea.setText("");
            viewFileJTextField.setText("");
            JTextArea jta = new JTextArea(output);
            jta.setEnabled(false);
            JOptionPane.showMessageDialog(null, jta);
        
        } catch (IOException ex) {
            statusJTextArea.setText("Opps!! Something has gone wrong, \nEnsure that the file you are trying to view exists\nAnd that the path is correct");
        }
           
        
    }//GEN-LAST:event_viewJButtonActionPerformed

    private void writeJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_writeJButtonActionPerformed
            String linesotoadd = contentJTextField.getText();
            String fileToAppendTo = appendFileJTextField.getText();
            
            
            Path pathToTargetFile = Paths.get(fileToAppendTo); 
        try { //write content to file, but first convert it to bytes
            Files.write(pathToTargetFile, linesotoadd.getBytes(), StandardOpenOption.APPEND);
            statusJTextArea.setText("The lines have been successfully appended to the file");
            contentJTextField.setText("");
            appendFileJTextField.setText("");
            
        } catch (IOException ex) {
            statusJTextArea.setText("Opps!! Something has gone wrong, \nEnsure that the file you are trying to write to exists\nAnd that the path is correct");
        }
    }//GEN-LAST:event_writeJButtonActionPerformed

    private void sourceFileJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sourceFileJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sourceFileJTextFieldActionPerformed

    private void deleteFileJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteFileJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteFileJTextFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HandlingFiles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HandlingFiles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HandlingFiles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HandlingFiles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new HandlingFiles().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField appendFileJTextField;
    private javax.swing.JTextField contentJTextField;
    private javax.swing.JButton copyJButton;
    private javax.swing.JPanel copyPanel;
    private javax.swing.JPanel copyPanelCenter;
    private javax.swing.JTextField createFileJTextField;
    private javax.swing.JButton createJButton;
    private javax.swing.JPanel createPanel;
    private javax.swing.JTextField deleteFileJTextField;
    private javax.swing.JButton deleteJButton;
    private javax.swing.JPanel deletePanel;
    private javax.swing.JPanel displayPanel;
    private javax.swing.JPanel feedbackPanel;
    private javax.swing.JLabel fileJLabel;
    private javax.swing.JLabel fileJLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JTextField sourceFileJTextField;
    private javax.swing.JTextArea statusJTextArea;
    private javax.swing.JTextField targetFileJTextField;
    private javax.swing.JTextField viewFileJTextField;
    private javax.swing.JButton viewJButton;
    private javax.swing.JButton writeJButton;
    private javax.swing.JPanel writePanel;
    private javax.swing.JPanel writePanelCenter;
    // End of variables declaration//GEN-END:variables
}
