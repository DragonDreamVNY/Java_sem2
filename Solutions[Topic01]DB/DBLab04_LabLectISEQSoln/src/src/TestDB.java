package src;


import com.sun.rowset.JdbcRowSetImpl;
import java.math.BigDecimal;
import java.sql.*;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Alan.Ryan
 */
public class TestDB extends javax.swing.JFrame {
    
    ArrayList<Prices> rows = new ArrayList();
    JdbcRowSetImpl rowSet;  
    ResultSet resultSet = null;
    Connection connection;
    String url = "jdbc:mysql://localhost:3306/iseq";
    String uName = "sduser";
    String password = "pass";
    String colheads = String.format("%-5s%-50s%-12s%-12s%-10s%-10s%-11s%-25s", "ID", "Company","Curr Price", "Price Yest", "Trd Yest", "Yr Low", "Yr High", "Date Listed") + "\n";

    /**
     * Creates new form TestDB
     */
    public TestDB() {
        initComponents();
        doConnection();
    }
    
    void doConnection() {
        rowSet = new JdbcRowSetImpl();
        
        try {
            //only need the conection because I want to call a stored procedure with it
            //otherwise I wouldn't need it
            connection = DriverManager.getConnection(url, uName, password);
            rowSet.setUrl(url);
            rowSet.setUsername(uName);
            rowSet.setPassword(password);
        }//end try
        
        catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }//end catch
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        controlPanel = new javax.swing.JPanel();
        alphaButton = new javax.swing.JButton();
        priceIncrButton = new javax.swing.JButton();
        spButton = new javax.swing.JButton();
        batchButton = new javax.swing.JButton();
        outputPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        output = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        controlPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Control Panel"));

        alphaButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        alphaButton.setText("Display Companys Alphabetical Order");
        alphaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alphaButtonActionPerformed(evt);
            }
        });
        controlPanel.add(alphaButton);

        priceIncrButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        priceIncrButton.setText("Display Companys By Price Increase");
        priceIncrButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceIncrButtonActionPerformed(evt);
            }
        });
        controlPanel.add(priceIncrButton);

        spButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        spButton.setText("Call Stored Procedure");
        spButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spButtonActionPerformed(evt);
            }
        });
        controlPanel.add(spButton);

        batchButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        batchButton.setText("Call Batch Statements");
        batchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                batchButtonActionPerformed(evt);
            }
        });
        controlPanel.add(batchButton);

        getContentPane().add(controlPanel, java.awt.BorderLayout.NORTH);

        outputPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Output"));
        outputPanel.setLayout(new java.awt.BorderLayout());

        output.setColumns(20);
        output.setEditable(false);
        output.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        output.setRows(5);
        jScrollPane1.setViewportView(output);

        outputPanel.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(outputPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void spButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spButtonActionPerformed
    
      try {
            //get company ID
            String input = JOptionPane.showInputDialog(null, "Enter Company ID");
            int id = Integer.parseInt(input);
            
            //prepare the call to the stored procedure
            CallableStatement callableStatement = (CallableStatement) connection.prepareCall("{call getCompanyByID(?)}"); 
        
            //put the company id, which came from the user as an argument to the first param in the stored procedure
            callableStatement.setInt (1, id);
            
            //call the stored procedure
            resultSet = callableStatement.executeQuery();
            
            }//end try
        
       catch(SQLException | NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, ex);
        }//end catch
       
        NavigateRecordsAndDisplay(resultSet);
        
        
    }//GEN-LAST:event_spButtonActionPerformed

    private void alphaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alphaButtonActionPerformed
            
            try {
                rowSet.setCommand("SELECT * FROM prices ORDER BY Company");
                rowSet.execute();

             }//end try
            
            catch (SQLException ex) {
                  JOptionPane.showMessageDialog(null, ex);
            }//end catch   
            
            NavigateRecordsAndDisplay(rowSet);

    }//GEN-LAST:event_alphaButtonActionPerformed

    private void priceIncrButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceIncrButtonActionPerformed

        try {
                        
            rowSet.setCommand("SELECT *, Current_Price - Yesterdays_Price AS Price_Difference FROM prices ORDER BY Price_Difference DESC");
            rowSet.execute();
         
        }//end try
        
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }//end catch    
            
        NavigateRecordsAndDisplay(rowSet);
      
    }//GEN-LAST:event_priceIncrButtonActionPerformed

    private void batchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_batchButtonActionPerformed

        try {
            
            Statement stmt = connection.createStatement();
            
            ////////////////////////////////////////////////////////////////////
            //UPDATE 1 
            //increase (by 10%) the current share price  of all companies who traded more than 30 shares yesterday 
            String updateString = "UPDATE prices SET Current_Price = Current_Price * 1.1 WHERE Shares_Traded_Yesterday >  30";
            stmt.addBatch(updateString);
          
            ////////////////////////////////////////////////////////////////////
            //DELETE
            //add delete company sql to batch
            String deleteString = "DELETE from prices where Company  LIKE 'p%'";
            stmt.addBatch(deleteString);
           
            
            ////////////////////////////////////////////////////////////////////
            //UPDATE 2
            //decrease (by 20%) the current share price of all companies who did not trade any shares yesterday
            updateString = "UPDATE prices SET Current_Price = Current_Price * .80 WHERE Shares_Traded_Yesterday =  0";
            stmt.addBatch(updateString);
            

            //execute batch
            int[] batch1 = stmt.executeBatch();
            
            ////////////////////////////////////////////////////////////////////
            //INSERT
                
            //get date from system
            java.util.Date today = new java.util.Date();
            
            //convert date to a date that SQL understands
            Date sqlDate = new Date(today.getTime());
            
            String insertString = "INSERT INTO PRICES VALUES (?,?,?,?,?,?,?,?)"; 
            PreparedStatement preparedStatement = connection.prepareStatement(insertString); 
            preparedStatement.setInt(1, 59);
            preparedStatement.setString(2, "Alan Ryan Group"); 
            preparedStatement.setDouble(3, 12.34);
            preparedStatement.setDouble(4, 56.78); 
            preparedStatement.setInt(5,2);
            preparedStatement.setDouble(6, 91.0); 
            preparedStatement.setDouble(7, 11.12    ); 
            preparedStatement.setDate(8, sqlDate);
            preparedStatement.addBatch();
      
            
            int[] batch2 = preparedStatement.executeBatch();
            int totalRecordsAffected = batch2.length + batch1.length;
            output.setText("Number of records changed = "+ totalRecordsAffected);

        } catch (SQLException | NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_batchButtonActionPerformed

    public void NavigateRecordsAndDisplay(ResultSet set) {
        String textToBeOutput = colheads;
        
        rows.clear();
        
        try {
            while (set.next() ) {
                    rows.add(new Prices(set.getInt("companynum"), set.getString("Company"), set.getDouble("Current_Price"), set.getDouble("Yesterdays_Price"), set.getInt("Shares_Traded_Yesterday"), set.getDouble("Yearly_Low"), set.getDouble("Yearly_High"), set.getDate("Listing_Date"))); 
            }//end while

            //loop thru each Prices object in the ArrayList rows and append its formatted details to the textarea
            for(Prices p: rows)
                textToBeOutput += p.formatAllCompanys() +"\n";
           
        }//end try
        catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
        output.setText(textToBeOutput);
        output.setCaretPosition(1);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TestDB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TestDB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TestDB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestDB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new TestDB().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton alphaButton;
    private javax.swing.JButton batchButton;
    private javax.swing.JPanel controlPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea output;
    private javax.swing.JPanel outputPanel;
    private javax.swing.JButton priceIncrButton;
    private javax.swing.JButton spButton;
    // End of variables declaration//GEN-END:variables
}
