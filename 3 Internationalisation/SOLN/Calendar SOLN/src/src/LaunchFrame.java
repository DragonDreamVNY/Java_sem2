/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package src;

import java.text.DateFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.Locale;

/**
 *
 * @author alan.ryan
 */
public class LaunchFrame extends javax.swing.JFrame {

    Locale[] locales = new Locale[] {new Locale("pt", "BR"), new Locale("fr", "CA"), new Locale("de", "DE"), new Locale("ga", "IE"), new Locale("en", "US")}; 

    /**
     * Creates new form LaunchFrame
     */
    public LaunchFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        controlPanel = new javax.swing.JPanel();
        selectLocaleLabel = new javax.swing.JLabel();
        localeComboBox = new javax.swing.JComboBox();
        outputPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Working With Dates and Times");

        selectLocaleLabel.setText("Select Locale");
        controlPanel.add(selectLocaleLabel);

        localeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Brazil", "Canada", "Germany", "Ireland", "United States", "" }));
        localeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                localeComboBoxActionPerformed(evt);
            }
        });
        controlPanel.add(localeComboBox);

        getContentPane().add(controlPanel, java.awt.BorderLayout.NORTH);

        outputPanel.setLayout(new java.awt.BorderLayout());

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        outputPanel.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(outputPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void localeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_localeComboBoxActionPerformed
      Locale selectedLocale = locales[localeComboBox.getSelectedIndex()]; //brazil is index 0
      GregorianCalendar cal = new GregorianCalendar();
      
      DateFormat fullDateFormatter = DateFormat.getDateInstance(DateFormat.FULL, selectedLocale);
      DateFormat shortDateFormatter = DateFormat.getDateInstance(DateFormat.SHORT, selectedLocale);
             
      DateFormat fullTimeFormatter = DateFormat.getTimeInstance(DateFormat.FULL, selectedLocale);
      DateFormat shortTimeFormatter = DateFormat.getTimeInstance(DateFormat.SHORT, selectedLocale);
             
      
      String output = "Selected Locale: " + localeComboBox.getSelectedItem(); //represents a string from the item user has selected from the combobox
      output += "\nFull Date: " + fullDateFormatter.format(cal.getTime());
      output += "\nShort Date: " + shortDateFormatter.format(cal.getTime());
      output += "\nMonth: " + cal.getDisplayName(Calendar.MONTH, Calendar.SHORT, selectedLocale); //three params passed in for getDisplayName() method
      output += "\nFull Time: " + fullTimeFormatter.format(cal.getTime());
      output += "\nShort Time: " + shortTimeFormatter.format(cal.getTime());
      output += "\nHour of Day: " + cal.get(Calendar.HOUR_OF_DAY);
      jTextArea1.setText(output);

      
      
    }//GEN-LAST:event_localeComboBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LaunchFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LaunchFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LaunchFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LaunchFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new LaunchFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel controlPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JComboBox localeComboBox;
    private javax.swing.JPanel outputPanel;
    private javax.swing.JLabel selectLocaleLabel;
    // End of variables declaration//GEN-END:variables
}
